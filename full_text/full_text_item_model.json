{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "FullTextItem",
  "description": "An item from the full text search results",
  "type": "object",
  "_comment": "uniqueItems is set to true to ensure that there are no duplicate items in the array. The minItems is set to 1 to ensure that there is at least one item in the array.",
  "properties": {
    "bookID": {
      "description": "The unique OCLC number for each record. In the front-end, the field is bookID.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "minItems": 1
    },
    "title": {
      "description": "The title of the item. Title is the field name in the front-end.",
      "type": "string"
    },
    "itemID": {
      "description": "The unique ht_id number. In the front-end this is the field name ItemID.",
      "type": "string"
    },
    "record": {
      "description": "",
      "type": "string"
    },
    "author": {
      "description": "The author of the item. In the front-end, this is the field name Author.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "minItems": 1
    },
    "useDate": {
      "description": "Calculated field from the Solr fields bothPublishDate and date. In the front-end, this is the field name UseDate.",
      "type": "integer"
    },
    "date": {
      "description": "date Solr field of the item. In the front-end, this is the field name Date.",
      "type": "integer"
    },
    "enumDate": {
      "description": "First date in the Solr field enumPublishDate. In the front-end, this is the field name EnumDate.",
      "type": "integer"
    },
    "bothDate": {
      "description": "First date in the Solr field bothPublishDate. In the front-end, this is the field name BothDate.",
      "type": "integer"
    },
    "itemClickData": {
      "description": "ClickData model results. In the front-end this is the field name ItemClickData.",
      "$ref": "clickdata_model.json"
    },
    "abLabel": {
      "description": "Label obtained by interleave. In the front-end, this is the field name ABLabel.",
      "type": "string"
    },
    "result_number": {
      "description": "Position of each item in the list of results. In the front-end, this is the field name ResultNumber.",
      "type": "integer"
    },
    "relevance": {
      "description": "Solr query score value. In the front-end, this is the field name relevance.",
      "type": "float"
    },
    "rights": {
      "description": "Rights field from Solr. In the front-end, this is the field name rights.",
      "type": "integer"
    },
    "fulltext": {
      "description": "Flag indicating the item access status. In the front-end, this is the field name fulltext.",
      "type": "enum",
      "enum": [
        "0",
        "1"
      ]
    },
    "emergency": {
      "description": "Flag indicating the emergency_flag is access_status is allow. In the front-end, this is the field name emergency.",
      "type": "enum",
      "enum": [
        "0",
        "1"
      ]
    },
    "key": {
      "description": "Calculated flag according emergency and fulltext flag. In the front-end this is the field name Key.",
      "type": "enum",
      "enum": [
        "limited",
        "emergency",
        "fulltext",
        "fulltext_activated"
      ]
    },
    "ptSearchHref": {
      "description": "URL to the item in Pageturner search. In the front-end, this is the field name PtSearchHref.",
      "type": "string"
    },
    "ptHref": {
      "description": "URL to the item in Pageturner. In the front-end, this is the field name PtHref.",
      "type": "string"
    },
    "subjectFacet": {
      "description": "Subject facet generated using the Solr field topicStr. In the front-end, this is the field name Subject.",
      "$ref": "facets_model.json"
    },
    "authorFacet": {
      "description": "Author facet generated using the Solr field authorStr. In the front-end, this is the field name Author.",
      "$ref": "facets_model.json"
    },
    "languageFacet": {
      "description": "Language facet generated using the Solr field language008_full. In the front-end, this is the field name Language.",
      "$ref": "facets_model.json"
    },
    "placeofPublicationFacet": {
      "description": "Place of publication facet generated using the Solr field countryOfPubStr. In the front-end, this is the field name Place of Publication.",
      "$ref": "facets_model.json"
    },
    "dateofPublicationFacet": {
      "description": "Date of publication facet generated using the Solr field bothPublishDateRange. In the front-end, this is the field name Date of Publication.",
      "$ref": "facets_model.json"
    },
    "originalFormatFacet": {
      "description": "Original format facet generated using the Solr field format. In the front-end, this is the field name Original Format.",
      "$ref": "facets_model.json"
    },
    "originalLocationFacet": {
      "description": "Original location facet generated using the Solr field htsource. In the front-end, this is the field name Original Location.",
      "$ref": "facets_model.json"
    }
  },
  "required": [
    "bookID",
    "title",
    "itemID",
    "record",
    "author",
    "useDate",
    "date",
    "enumDate",
    "bothDate",
    "itemClickData",
    "abLabel",
    "result_number",
    "relevance",
    "rights",
    "fulltext",
    "emergency",
    "key",
    "ptSearchHref",
    "ptHref",
    "subjectFacet",
    "authorFacet",
    "languageFacet",
    "placeofPublicationFacet",
    "dateofPublicationFacet",
    "originalFormatFacet",
    "originalLocationFacet"
  ]
}